{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/card/card.component.ts","./src/app/card/card.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div class=\"container-fluid\">    \r\n    <div class=\"row d-flex justify-content-center margin\">        \r\n        <div class=\"col-lg-6 content  \">\r\n            <div class=\"row \">    \r\n              \r\n                <form>\r\n                    <input #myInput type=\"text\" name=\"\" id=\"task\" class=\"m-2 p-2 textinput\" placeholder=\"Add a task\">\r\n                   \r\n                    <button type=\"button\" class=\"btn btn-success p-2 text-white m-2 fw-bold\" (click)=\"addToList(myInput.value)\">Add a task</button>  \r\n                </form>                     \r\n            </div>\r\n            <p *ngIf=\"works.length==0\" class=\"mt-2 fw-bold\">All tasks have been completed.</p>\r\n           \r\n            <div class=\"row text-wrap\" *ngFor=\"let elements of works ;let i=index;\">\r\n               <!-- <app-card [myData]=\"elements\"></app-card>-->\r\n               \r\n               <div class=\"output col-lg-12 m-0\"> \r\n               \r\n                   <div class=\"fw-bold \" [ngClass]=\"{'completedtask':!elements.finished}\">{{elements.work}}</div>\r\n                    <div><input type=\"checkbox\" name=\"\" id=\"\" class=\"radio \" (click)=\"change(i)\"></div>\r\n               </div> \r\n              \r\n            </div>   \r\n\r\n            <div class=\"row\">   \r\n                <button class=\"btn btn-success p-3 m-2 complete fw-bold\" (click)=\"remove()\">\r\n                        Clear Completed Task\r\n                </button>\r\n            </div>\r\n            \r\n        \r\n    </div>\r\n</div>","import { Component } from '@angular/core';\nimport { Lists } from 'src/file';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'TodoList';\n  works:Array<Lists>=[]    \n\n  addToList(value:string)\n  {\n    let data={\n      work:value,\n      finished:true\n    }\n\n    this.works.push(data);\n    \n    console.log(this.works)\n  }\n  change(index:number){\n    if(this.works[index].finished==true){\n      this.works[index].finished=false;\n    }\n    else{\n      this.works[index].finished=true;\n    }\n    console.log(this.works[index])\n  }\n  remove()\n  {\n    for(let i=0;i<this.works.length;i++)\n    {\n      if(this.works[i].finished==false)\n      {  \n        this.works.splice(i,1);\n      }\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CardComponent } from './card/card.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Lists } from 'src/file';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.css']\n})\nexport class CardComponent implements OnInit {\n\n  @Input() myData={\n    \n  }\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  \n}\n","    <div class=\"m-2\"> \n       \n    </div>                \n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}